{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ratna\\\\pro\\\\21-spa-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const params = useParams();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"83bg/f50vBzyoLkuhTA99J7W+qE=\", false, function () {\n  return [useParams, useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventID;\n  const response = await fetch(\"http://localhost:8080/events\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event!\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","params","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","id","eventID","response","fetch","ok","json","message","status","$RefreshReg$"],"sources":["C:/Users/ratna/pro/21-spa-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, useLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nfunction EventDetailPage() {\r\n  const params = useParams();\r\n  const data = useLoaderData();\r\n  return (\r\n    <>\r\n      <EventItem event={data.event} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventID;\r\n  const response = await fetch(\"http://localhost:8080/events\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected event!\" },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAChD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC5B,oBACEG,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,SAAS;MAACU,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP;AAACR,EAAA,CARQD,eAAe;EAAA,QACPP,SAAS,EACXC,aAAa;AAAA;AAAAgB,EAAA,GAFnBV,eAAe;AAUxB,eAAeA,eAAe;AAE9B,OAAO,eAAeW,MAAMA,CAAC;EAAEC,OAAO;EAAEV;AAAO,CAAC,EAAE;EAChD,MAAMW,EAAE,GAAGX,MAAM,CAACY,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGH,EAAE,CAAC;EAEjE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,IAAI,CACR;MAAEC,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOL,QAAQ;EACjB;AACF;AAAC,IAAAL,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}